#!/bin/sh

NAME='rclone'
REMOTE='aliyun:/ '   # Rclone配置时填写的 name
LOCAL='/mnt/aliyun'  # 挂载地址，VPS本地挂载目录
CONFIG='/root/.config/rclone/rclone.conf'  # Rclone 的配置文件地址
CACHE_DIR='/other/Caches/aliyun'  # 缓存目录
LOG_FILE='/other/Configs/rclone/log/rclone.log'  # 日志文件路径

RCLONE_OPTS=(
  "--config=$CONFIG"
  "--use-mmap"
  "--multi-thread-streams=4"
  "--vfs-cache-mode=writes"
  "--cache-dir=$CACHE_DIR"
  "--no-update-modtime"
  "--no-check-certificate"
  "--default-permissions"
  "--header=Referer:https://www.aliyundrive.com/"
  "--vfs-read-chunk-size-limit=128M"
  "--vfs-read-chunk-size=16M"
  "--dir-cache-time=60s"
  "--buffer-size=1G"
  "--ignore-checksum"
  "--no-gzip-encoding"
  "--allow-non-empty"
  "--copy-links"
  "--umask=000"
  "--log-file=$LOG_FILE"
)

check_pid() {
  local pid=$(pidof $NAME)
  if [ -n "$pid" ]; then
    echo "$NAME [ID:$pid] 正在运行"
    return 0
  else
    return 1
  fi
}

start() {
  check_pid && return 1

  fusermount -zuq $LOCAL >/dev/null 2>&1
  mkdir -p $LOCAL

  rclone mount $REMOTE $LOCAL \
    "${RCLONE_OPTS[@]}" \
    >/dev/null 2>&1 &

  sleep 3

  check_pid && {
    echo "$NAME 启动成功...[ID:$(pidof $NAME)]"
    echo "$REMOTE --> $LOCAL"
    return 0
  } || {
    echo "$NAME 启动失败!"
    return 1
  }
}

stop() {
  check_pid || return 1

  killall $NAME >/dev/null 2>&1

  check_pid && {
    echo "$NAME 停止失败!"
    return 1
  } || {
    echo "$NAME 停止成功!"
    fusermount -zuq $LOCAL >/dev/null 2>&1
    return 0
  }
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;
esac

exit 0
